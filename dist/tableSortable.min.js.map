{"version":3,"file":"tableSortable.min.js","sources":["tableSortable.esm.js"],"sourcesContent":["/**\n * A simple jQuery plugin to sort table body by a selected column\n *\n * @license MIT\n * @author Dumitru Uzun (DUzun.Me)\n * @version 1.0.0\n */\nexport default function initTableSortable($) {\n    const CLICK_TH_SELECTOR = 'th:not(.nosort),td.sort';\n    let sort_dir;\n    const tableSortable = function tableSortable() {\n        // Mark the table as initialized\n        this.addClass('table_sortable');\n        let $thead = this.children('thead');\n        let $tbody = this.children('tbody');\n        let $thr = $thead.children('tr');\n        $thead.on('click', CLICK_TH_SELECTOR, function () {\n            const $th = $(this);\n            let sortOrder = $th.hasClass('asc') ? -1 : 1;\n            const $ths = $thr.children(CLICK_TH_SELECTOR);\n            $ths.removeClass('asc desc');\n            if (sortOrder === -1) {\n                $th.removeClass('asc').addClass('desc');\n            }\n            else {\n                $th.removeClass('desc').addClass('asc');\n            }\n            let cols = $th.data('_cols_');\n            if (cols == undefined) {\n                calcCols($thr);\n                cols = $th.data('_cols_');\n            }\n            const rows = $tbody.find('>tr:has(td)')\n                .get() // get an Array\n                .map((tr) => {\n                const $tds = $(tr).children('td');\n                const ret = cols.map(function (col) {\n                    let val = $tds.eq(col).text().toUpperCase(); // ignore case\n                    let ret = [val];\n                    let num = parseFloat(val.trim());\n                    if (!isNaN(num))\n                        ret[1] = num;\n                    return ret;\n                });\n                ret.tr = tr;\n                return ret;\n            });\n            sort_dir = sortOrder;\n            rows.sort(cmpArr);\n            $tbody.append(rows.map((row) => row.tr));\n        });\n        return this;\n    };\n    // Comparison function for [].sort(), almost like narutal sort\n    function cmpArr(_a, _b) {\n        let ret;\n        _a.some((a, idx) => {\n            let b = _b[idx];\n            if (1 in a && 1 in b && (ret = a[1] - b[1])) {\n                return ret;\n            }\n            else {\n                let val1 = a[0];\n                let val2 = b[0];\n                if (val1 != val2) {\n                    ret = val1 < val2 ? -1 : 1;\n                    return ret;\n                }\n            }\n        });\n        return ret * (sort_dir > 0 ? 1 : -1);\n    }\n    // Calc _cols_ indexes, respecting colspan and rowspan in headers\n    function calcCols($thr) {\n        let headerMatrix = [];\n        $thr.each((rowIdx, tr) => {\n            $(tr)\n                .children('th,td')\n                .each((colIdx, td) => {\n                //@ts-ignore\n                let { rowSpan, colSpan } = td;\n                const cols = [];\n                const colsDict = {};\n                while (rowSpan-- > 0) {\n                    let _rowIdx = rowIdx + rowSpan;\n                    let _colSpan = colSpan;\n                    while (_colSpan-- > 0) {\n                        let _colIdx = colIdx + _colSpan;\n                        let rowMatrix = headerMatrix[_rowIdx] || (headerMatrix[_rowIdx] = []);\n                        while (rowMatrix[_colIdx])\n                            ++_colIdx;\n                        rowMatrix[_colIdx] = td;\n                        if (!(_colIdx in colsDict)) {\n                            cols.push(_colIdx);\n                            colsDict[_colIdx] = _colIdx;\n                        }\n                    }\n                }\n                cols.sort();\n                $(td).data('_cols_', cols);\n            });\n        });\n    }\n    $.fn.tableSortable = tableSortable;\n    return tableSortable;\n}\n// Auto-init in browser when jQuery or Zepto is present\nif (typeof window !== 'undefined') {\n    const $ = window.jQuery || window.Zepto;\n    if ($) {\n        initTableSortable($);\n    }\n}\n"],"names":["initTableSortable","$","sort_dir","CLICK_TH_SELECTOR","tableSortable","addClass","$thead","this","children","$tbody","$thr","on","$th","sortOrder","hasClass","removeClass","cols","data","undefined","headerMatrix","each","rowIdx","tr","colIdx","td","rowSpan","colSpan","colsDict","_rowIdx","_colSpan","_colIdx","rowMatrix","push","sort","calcCols","rows","find","get","map","$tds","ret","col","val","eq","text","toUpperCase","num","parseFloat","trim","isNaN","cmpArr","append","row","_a","_b","some","a","idx","b","val1","val2","fn","window","jQuery","Zepto"],"mappings":";;;;;;;OAOe,SAASA,EAAkBC,OAElCC,EADEC,EAAoB,0BAEpBC,EAAgB,gBAEbC,SAAS,sBACVC,EAASC,KAAKC,SAAS,SACvBC,EAASF,KAAKC,SAAS,SACvBE,EAAOJ,EAAOE,SAAS,aAC3BF,EAAOK,GAAG,QAASR,GAAmB,eAC5BS,EAAMX,EAAEM,MACVM,EAAYD,EAAIE,SAAS,QAAU,EAAI,EAC9BJ,EAAKF,SAASL,GACtBY,YAAY,aACE,IAAfF,EACAD,EAAIG,YAAY,OAAOV,SAAS,QAGhCO,EAAIG,YAAY,QAAQV,SAAS,WAEjCW,EAAOJ,EAAIK,KAAK,UACRC,MAARF,cA6CMN,OACVS,EAAe,GACnBT,EAAKU,MAAK,SAACC,EAAQC,GACfrB,EAAEqB,GACGd,SAAS,SACTY,MAAK,SAACG,EAAQC,WAETC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACTV,EAAO,GACPW,EAAW,GACVF,KAAY,WACXG,EAAUP,EAASI,EACnBI,EAAWH,EACRG,KAAa,GAAG,SACfC,EAAUP,EAASM,EACnBE,EAAYZ,EAAaS,KAAaT,EAAaS,GAAW,IAC3DG,EAAUD,MACXA,EACNC,EAAUD,GAAWN,EACfM,KAAWH,IACbX,EAAKgB,KAAKF,GACVH,EAASG,GAAWA,GAIhCd,EAAKiB,OACLhC,EAAEuB,GAAIP,KAAK,SAAUD,SAtErBkB,CAASxB,GACTM,EAAOJ,EAAIK,KAAK,eAEdkB,EAAO1B,EAAO2B,KAAK,eACpBC,MACAC,KAAI,SAAChB,OACAiB,EAAOtC,EAAEqB,GAAId,SAAS,MACtBgC,EAAMxB,EAAKsB,KAAI,SAAUG,OACvBC,EAAMH,EAAKI,GAAGF,GAAKG,OAAOC,cAC1BL,EAAM,CAACE,GACPI,EAAMC,WAAWL,EAAIM,eACpBC,MAAMH,KACPN,EAAI,GAAKM,GACNN,YAEXA,EAAIlB,GAAKA,EACFkB,KAEXtC,EAAWW,EACXsB,EAAKF,KAAKiB,GACVzC,EAAO0C,OAAOhB,EAAKG,KAAI,SAACc,UAAQA,EAAI9B,UAEjCf,eAGF2C,EAAOG,EAAIC,OACZd,SACJa,EAAGE,MAAK,SAACC,EAAGC,OACJC,EAAIJ,EAAGG,MACP,KAAKD,GAAK,KAAKE,IAAMlB,EAAMgB,EAAE,GAAKE,EAAE,WAC7BlB,MAGHmB,EAAOH,EAAE,GACTI,EAAOF,EAAE,UACTC,GAAQC,EACRpB,EAAMmB,EAAOC,GAAQ,EAAI,YAK9BpB,GAAOtC,EAAW,EAAI,GAAK,UAiCtCD,EAAE4D,GAAGzD,cAAgBA,EACdA,EAGX,GAAsB,oBAAX0D,OAAwB,KACzB7D,EAAI6D,OAAOC,QAAUD,OAAOE,MAC9B/D,GACAD,EAAkBC"}